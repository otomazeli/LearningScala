package ProjectEuler

/**
  * Each new term in the Fibonacci sequence is generated by adding the previous two
  * terms. By starting with 1 and 2, the first 10 terms will be:
  *
  * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  *
  * By considering the terms in the Fibonacci sequence whose values do not exceed four
  * million, find the sum of the even-valued terms.
  */
object Problem2 {

  @scala.annotation.tailrec
  def even_checker(a: Stream[Int], e: List[Int], max: Int): Int = {
    a match {
      case b if a.head >= max => e.sum
      case c if a.head % 2 == 0 => even_checker(a.tail, a.head :: e, max)
      case _ => even_checker(a.tail, e, max)
    }
  }

}
